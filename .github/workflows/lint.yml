name: Lint Frontend & Backend

on: push

jobs:
  frontend-lint:
    name: Run ESLint (Frontend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}  # Asegura que esté en la rama correcta

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run ESLint and auto-fix issues
        run: |
          cd frontend
          npx eslint "src/**/*.{js,jsx}" --fix

      - name: Commit and push ESLint fixes
        run: |
          cd frontend
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "fix: aplicar correcciones automáticas con ESLint" || echo "No changes to commit"
          git pull origin ${{ github.ref_name }} --rebase  # Asegura que no haya conflictos
          git push origin HEAD:${{ github.ref_name }}  # Hace push a la rama actual
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Usar el token de acceso personal

  backend-lint:
    name: Run Flake8 & Black (Backend)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install flake8 black

      - name: Run Black (formato y auto-corrección)
        run: |
          cd backend
          black .  # Corrige automáticamente los errores de formato

      - name: Commit and push Black changes
        run: |
          cd backend
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "fix: aplicar correcciones automáticas con Black" || echo "No changes to commit"
          git pull origin ${{ github.ref_name }} --rebase
          git push origin HEAD:${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Usar el token de acceso personal

      - name: Run Flake8 (solo para reportar errores restantes)
        run: |
          cd backend
          flake8 .  # Detecta errores de estilo después de que Black ha corregido